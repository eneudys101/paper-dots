file:///home/ene/assembly/stack-example.s {"mtime":1696913603615,"ctime":1696913603615,"size":0,"etag":"3ban8352i0","orphaned":false,"typeId":""}
.global _start

.section .data

.section .text

_start:
    mov x0, #5            ; Load the value 5 into register x0
    mov x1, #7            ; Load the value 7 into register x1

    bl add_two_numbers    ; Call the function 'add_two_numbers'
    
    ; Here, the result will be in x2
    ; For simplicity, we'll just halt execution here

    b .                  ; Infinite loop (halt)

add_two_numbers:
    ; Save x0, x1, and lr (link register) to the stack
    stp x0, x1, [sp, #-16]!  
    stp x2, lr, [sp, #-16]!

    ; Perform the addition
    add x2, x0, x1       ; Add x0 and x1, store result in x2

    ; Restore x0, x1, and lr from the stack
    ldp x2, lr, [sp], #16
    ldp x0, x1, [sp], #16

    ret                  ; Return to the caller
